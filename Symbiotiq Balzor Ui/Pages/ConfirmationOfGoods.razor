@page "/ConfirmAvailability"
@using Symbiotiq_Balzor_Ui.Data_Access
@using Symbiotiq_Balzor_Ui.Models
@inject IAuthService authService
@inject IMongoUserData userData

@if(loggedInUser is not null)
{
    @if (loggedInUser.HasAvailableItems == false && (loggedInUser.Collector == "" || loggedInUser.Collector is null))
    {
        <div class="confirm-available-items-container">
            <div class="confirmation-text-container">
                <h3>Do you have any items to dontae today?</h3>
            </div>
            <div class="confirmation-buttons-container">
                <button class="btn-primary confirmtion-btn" @onclick="() => ConfirmGoods()">Request Collection</button>
            </div>
        </div>
    }
    @if (loggedInUser.HasAvailableItems == true && (loggedInUser.Collector == "" || loggedInUser.Collector == null))
    {
        <div class="confirm-available-items-container">
            <div class="confirmation-text-container">
                <h3>Thank you for today's donation. A student will confirm this collection shortly</h3>
            </div>
            <div class="confirmation-buttons-container">
                <button class="btn-primary delete-btn" @onclick="() => DenyGoods()">Cancel Donation</button>
            </div>
        </div>
    }
    @if (loggedInUser.Collector != "" && loggedInUser.CollectionRequested == true)
    {
        <div class="confirm-available-items-container">
            <div class="confirmation-text-container">
                <h3>@loggedInUser.Collector has confirmed they will be collecting items from you today</h3>
                <h3>If this collection has been successful please confirm.</h3>
            </div>
            <div class="confirmation-buttons-container">
                <button class="btn-primary confirmtion-btn" @onclick="() => ConfirmCollection()">Complete Collection</button>
            </div>
        </div>
    }
}




@code {

    private UserModel? loggedInUser;

    protected override void OnInitialized()
    {
        loggedInUser = authService.CurrentUser;
    }

    private void ConfirmGoods()
    {
        if(loggedInUser is not null)
        {
            loggedInUser.HasAvailableItems = true;
            loggedInUser.CollectionRequested = false;
            loggedInUser.Collector = "";

            userData.UpdateUSer(loggedInUser);
            StateHasChanged();
        }
    }

    private void ConfirmCollection()
    {
        if (loggedInUser is not null)
        {
            loggedInUser.HasAvailableItems = false;
            loggedInUser.CollectionRequested = false;
            loggedInUser.Collector = "";

            userData.UpdateUSer(loggedInUser);
            StateHasChanged();

        }
    }

    private void DenyGoods()
    {
        if (loggedInUser is not null)
        {
            loggedInUser.HasAvailableItems = false;
            loggedInUser.CollectionRequested = false;
            loggedInUser.Collector = "";

            userData.UpdateUSer(loggedInUser);
            StateHasChanged();

        }
    }



}
